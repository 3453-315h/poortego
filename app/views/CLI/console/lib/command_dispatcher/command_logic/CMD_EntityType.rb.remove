class CMD_EntityType
  attr_accessor :driver

  include Rex::Ui::Text::DispatcherShell::CommandDispatcher

  #
  # Constructor
  #
  def initialize(driver)
    super
    
    self.driver = driver
  end
  
  #
  # "entitytype" command logic
  #
  def cmd_entitytype(*args)
    
    if (args.length < 1)
      cmd_entitytype_help
      return
    end
    
    type_name = args[0]
    if ((type_name == '-h') || (type_name == '-?'))
      cmd_entitytype_help
      return
    end
    
    type_id = EntityType.select(type_name)
    if (type_id < 1)
      print_error("Invalid entitytype name.")
      return
    end
    
    entity_id = driver.interface.working_values["Current Entity"].id
    
    # Get the fields tied to the type
    field_rows = EntityTypeField.find(:all, :conditions => "entity_type_id=#{type_id}", :order => "field_name ASC")
    field_rows.each do |field_row|
          # Add field_row['field_name'] Field to Entity
          EntityField.select_or_insert(entity_id, field_row['field_name'])
    end
    
  end
  
  #
  # "entitytype" command help
  #
  def cmd_entitytype_help(*args)
    print_status("Command    : entitytype")
    print_status("Description: assign the current entity an entitytype.")
    print_status("Usage      : 'entitytype <type_name>'")
  end
  
end